version: '3.6'
services:
  ch-server:
    container_name: hdx-ci-ch-server
    image: clickhouse/clickhouse-server:23.5.2-alpine
    environment:
      # default settings
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
      CLICKHOUSE_DEFAULT_DATABASE: default
      CLICKHOUSE_USER: root
      CLICKHOUSE_PASSWORD: toor
    volumes:
      - ./docker/clickhouse/local/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    restart: on-failure
    ports:
      - 8123:8123 # http api
      - 9000:9000 # native
    networks:
      - internal
  db:
    container_name: hdx-ci-db
    image: mongo:5.0.14-focal
    command: --port 29999
    ports:
      - 29999:29999
    networks:
      - internal
  redis:
    container_name: hdx-ci-redis
    image: redis:7.0.11-alpine
    ports:
      - 6379:6379
    networks:
      - internal
  api:
    build:
      context: .
      dockerfile: ./packages/api/Dockerfile
      target: dev
    container_name: hdx-ci-api
    image: hyperdx/ci/api
    ports:
      - 9000:9000
    environment:
      APP_TYPE: 'api'
      CLICKHOUSE_HOST: http://ch-server:8123
      CLICKHOUSE_PASSWORD: toor
      CLICKHOUSE_USER: root
      EXPRESS_SESSION_SECRET: 'hyperdx is cool ðŸ‘‹'
      FRONTEND_URL: http://localhost:9090 # need to be localhost (CORS)
      MONGO_URI: 'mongodb://db:29999/hyperdx-test'
      NODE_ENV: ci
      PORT: 9000
      REDIS_URL: redis://redis:6379
      SERVER_URL: http://localhost:9000
    volumes:
      - ./packages/api/src:/app/src
    networks:
      - internal
    depends_on:
      - ch-server
      - db
      - redis

volumes:
  test_mongo_data:

networks:
  internal:
    name: 'hyperdx-ci-internal-network'
